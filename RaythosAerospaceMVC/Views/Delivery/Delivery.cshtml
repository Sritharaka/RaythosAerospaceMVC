@model Delivery


@{
    ViewData["Title"] = "Aircraft Page";
}

<!DOCTYPE html>
<html>
<head>
    <title>Delivery Page</title>
    <!-- Bootstrap CSS (from CDN) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="..." crossorigin="anonymous">

    <!-- Bootstrap Icons (from CDN) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">


    <!-- Toastr CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet">
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Toastr JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
</head>
<body>

    <div style="margin-left: 40px; margin-top: 40px; width: 1150px;">

        <h3 style="margin-bottom: 20px;">Delivery</h3>

        <form asp-action="Update" method="post" enctype="multipart/form-data" id="subMitId">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="ModelName">Aircraft Name</label>
                        <input asp-for="ModelName" id="ModelName" placeholder="Aircraft Name" name="ModelName" class="form-control @(ViewData.ModelState.ContainsKey("ModelName") && ViewData.ModelState["ModelName"].Errors.Count > 0 ? "border border-danger" : "")" value="@(Model?.ModelName ?? "")" readonly />
                        <input asp-for="ManufacturingStatusId" id="ManufacturingStatusId" placeholder="ManufacturingStatusId" name="ManufacturingStatusId" class="form-control @(ViewData.ModelState.ContainsKey("ManufacturingStatusId") && ViewData.ModelState["ManufacturingStatusId"].Errors.Count > 0 ? "border border-danger" : "")" required value="@(Model?.ManufacturingStatusId.ToString() ?? "")" style="display:none" />
                        <input asp-for="DeliveryId" id="DeliveryId" placeholder="DeliveryId" name="DeliveryId" class="form-control @(ViewData.ModelState.ContainsKey("DeliveryId") && ViewData.ModelState["DeliveryId"].Errors.Count > 0 ? "border border-danger" : "")" required value="@(Model?.DeliveryId.ToString() ?? "")" style="display:none" />
                        <span asp-validation-for="ModelName" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="Manufacturer">Manufacturer</label>
                        <input asp-for="Manufacturer" id="Manufacturer" placeholder="Manufacturer" name="Manufacturer" class="form-control @(ViewData.ModelState.ContainsKey("Manufacturer") && ViewData.ModelState["Manufacturer"].Errors.Count > 0 ? "border border-danger" : "")" value="@(Model?.Manufacturer ?? "")" readonly />
                        <span asp-validation-for="Manufacturer" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="BasePrice">Base Price (USD)</label>
                        <input asp-for="BasePrice" id="BasePrice" name="BasePrice" placeholder="Base Price" class="form-control @(ViewData.ModelState.ContainsKey("BasePrice") && ViewData.ModelState["BasePrice"].Errors.Count > 0 ? "border border-danger" : "")" readonly value="@(Model?.BasePrice.ToString() ?? "")" />
                        <span asp-validation-for="BasePrice" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="CardHolderName">Owner Name</label>
                        <input asp-for="CardHolderName" id="CardHolderName" placeholder="Owner Name" name="CardHolderName" class="form-control @(ViewData.ModelState.ContainsKey("CardHolderName") && ViewData.ModelState["CardHolderName"].Errors.Count > 0 ? "border border-danger" : "")" readonly value="@(Model?.CardHolderName ?? "")" />
                        <span asp-validation-for="CardHolderName" class="text-danger"></span>
                    </div>
                </div>


            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="Telephone">Telephone</label>
                        <input asp-for="Telephone" id="Telephone" name="Telephone" placeholder="Telephone" class="form-control @(ViewData.ModelState.ContainsKey("Telephone") && ViewData.ModelState["Telephone"].Errors.Count > 0 ? "border border-danger" : "")" required readonly value="@(Model?.Telephone.ToString() ?? "")" />
                        <span asp-validation-for="Telephone" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="EmailAddress">EmailAddress</label>
                        <input asp-for="EmailAddress" id="EmailAddress" placeholder="EmailAddress" name="EmailAddress" class="form-control @(ViewData.ModelState.ContainsKey("EmailAddress") && ViewData.ModelState["EmailAddress"].Errors.Count > 0 ? "border border-danger" : "")" required readonly value="@(Model?.EmailAddress ?? "")" />
                        <span asp-validation-for="EmailAddress" class="text-danger"></span>
                    </div>
                </div>


            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="AirframeProgress">Airframe Progress (%)</label>
                        <select asp-for="AirframeProgress" class="form-control" id="AirframeProgress" name="AirframeProgress" disabled>
                            <option value="" selected>Select Progress</option>
                            <option value="0">0%</option>
                            <option value="10">10%</option>
                            <option value="20">20%</option>
                            <option value="30">30%</option>
                            <option value="40">40%</option>
                            <option value="50">50%</option>
                            <option value="60">60%</option>
                            <option value="70">70%</option>
                            <option value="80">80%</option>
                            <option value="90">90%</option>
                            <option value="100">100%</option>
                        </select>
                        <span asp-validation-for="AirframeProgress" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="AvionicsSystemsProgress">Avionics Systems Progress (%)</label>
                        <select asp-for="AvionicsSystemsProgress" class="form-control" id="AvionicsSystemsProgress" name="AvionicsSystemsProgress" disabled>
                            <option value="" selected>Select Progress</option>
                            <option value="0">0%</option>
                            <option value="10">10%</option>
                            <option value="20">20%</option>
                            <option value="30">30%</option>
                            <option value="40">40%</option>
                            <option value="50">50%</option>
                            <option value="60">60%</option>
                            <option value="70">70%</option>
                            <option value="80">80%</option>
                            <option value="90">90%</option>
                            <option value="100">100%</option>
                        </select>
                        <span asp-validation-for="AvionicsSystemsProgress" class="text-danger"></span>
                    </div>

                </div>


            </div>


            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="InteriorProgress">Interior Progress (%)</label>
                        <select asp-for="InteriorProgress" class="form-control" id="InteriorProgress" name="InteriorProgress" disabled>
                            <option value="" selected>Select Progress</option>
                            <option value="0">0%</option>
                            <option value="10">10%</option>
                            <option value="20">20%</option>
                            <option value="30">30%</option>
                            <option value="40">40%</option>
                            <option value="50">50%</option>
                            <option value="60">60%</option>
                            <option value="70">70%</option>
                            <option value="80">80%</option>
                            <option value="90">90%</option>
                            <option value="100">100%</option>
                        </select>
                        <span asp-validation-for="InteriorProgress" class="text-danger"></span>
                    </div>

                </div>

                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="EnginesProgress">Engines Progress (%)</label>
                        <select asp-for="EnginesProgress" class="form-control" id="EnginesProgress" name="EnginesProgress" disabled>
                            <option value="" selected>Select Progress</option>
                            <option value="0">0%</option>
                            <option value="10">10%</option>
                            <option value="20">20%</option>
                            <option value="30">30%</option>
                            <option value="40">40%</option>
                            <option value="50">50%</option>
                            <option value="60">60%</option>
                            <option value="70">70%</option>
                            <option value="80">80%</option>
                            <option value="90">90%</option>
                            <option value="100">100%</option>
                        </select>
                        <span asp-validation-for="EnginesProgress" class="text-danger"></span>
                    </div>


                </div>


            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="OverallProgress">Overall Progress (%)</label>
                        <select asp-for="OverallProgress" class="form-control" id="OverallProgress" name="OverallProgress" disabled>
                            <option value="" selected>Select Progress</option>
                            <option value="0">0%</option>
                            <option value="10">10%</option>
                            <option value="20">20%</option>
                            <option value="30">30%</option>
                            <option value="40">40%</option>
                            <option value="50">50%</option>
                            <option value="60">60%</option>
                            <option value="70">70%</option>
                            <option value="80">80%</option>
                            <option value="90">90%</option>
                            <option value="100">100%</option>
                        </select>
                        <span asp-validation-for="OverallProgress" class="text-danger"></span>
                    </div>

                </div>

                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="DeliveryDate">Delivery Date</label>
                        <input asp-for="DeliveryDate" class="form-control @(ViewData.ModelState.ContainsKey("DeliveryDate") && ViewData.ModelState["DeliveryDate"].Errors.Count > 0 ? "border border-danger" : "")" type="date" required readonly />
                        <span asp-validation-for="DeliveryDate" class="text-danger"></span>
                    </div>

                </div>


            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="AirportCity">Airport City</label>
                        <input asp-for="AirportCity" id="AirportCity" name="AirportCity" placeholder="Enter Airport city name" class="form-control @(ViewData.ModelState.ContainsKey("AirportCity") && ViewData.ModelState["AirportCity"].Errors.Count > 0 ? "border border-danger" : "")" required readonly />
                        <span asp-validation-for="AirportCity" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="ShippingDate">Shipping Request Date</label>
                        <input asp-for="ShippingDate" class="form-control @(ViewData.ModelState.ContainsKey("ShippingDate") && ViewData.ModelState["ShippingDate"].Errors.Count > 0 ? "border border-danger" : "")" type="date" required readonly />
                        <span asp-validation-for="ShippingDate" class="text-danger"></span>
                    </div>
                </div>


            </div>


            <div class="form-group">
                <label asp-for="AdditionalDetails">Additional Details</label>
                <textarea asp-for="AdditionalDetails" class="form-control @(ViewData.ModelState.ContainsKey("AdditionalDetails") && ViewData.ModelState["AdditionalDetails"].Errors.Count > 0 ? "border border-danger" : "")" required readonly></textarea>
                <span asp-validation-for="AdditionalDetails" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="WarrentyYears">Warrenty Years</label>
                        <input asp-for="WarrentyYears" id="WarrentyYears" name="WarrentyYears" placeholder="Enter Warrenty Years" class="form-control @(ViewData.ModelState.ContainsKey("WarrentyYears") && ViewData.ModelState["WarrentyYears"].Errors.Count > 0 ? "border border-danger" : "")" required  />
                        <span asp-validation-for="WarrentyYears" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="form-group">
                        <label asp-for="DeliveryCompleteDate">Delivery Complete Date</label>
                        <input asp-for="DeliveryCompleteDate" class="form-control @(ViewData.ModelState.ContainsKey("DeliveryCompleteDate") && ViewData.ModelState["DeliveryCompleteDate"].Errors.Count > 0 ? "border border-danger" : "")" type="date" required  />
                        <span asp-validation-for="DeliveryCompleteDate" class="text-danger"></span>
                    </div>
                </div>


            </div>


            <div class="form-group">
                <label asp-for="DeliveryCompleteDescription">Delivery Description</label>
                <textarea asp-for="DeliveryCompleteDescription" class="form-control @(ViewData.ModelState.ContainsKey("DeliveryCompleteDescription") && ViewData.ModelState["DeliveryCompleteDescription"].Errors.Count > 0 ? "border border-danger" : "")" required></textarea>
                <span asp-validation-for="DeliveryCompleteDescription" class="text-danger"></span>
            </div>


            <!-- Include other input fields for the remaining properties -->

            <div class="form-group" style="margin-top:40px">
                @*<input type="submit" value="Add Aircraft" class="btn btn-primary" />*@

                <!-- Button with Bootstrap Icon -->
                @*         <button type="submit" id="submitAircraft" class="btn btn-primary">
                <i class="bi bi-plus"></i> Add Aircraft
                </button>*@

                <button type="button" id="updateAircraft" class="btn btn-danger">
                    <i class="bi bi-pencil me-2"></i> Update Delivery
                </button>

                <!-- Button to load the aircraft list (without triggering form submission) -->
                <button type="button" id="loadAircraftList" class="btn btn-success">
                    <i class="bi bi-list"></i> Delivery List
                </button>

            </div>
        </form>



    </div>



    <!-- Include the partial view -->
    <div id="displayDeliveryTable">
        <!-- Aircraft list will be displayed here -->
        @await Html.PartialAsync("_DisplayDeliveryTable", Model) <!-- Assuming Model contains IPagedList<Aircraft> -->

    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#loadAircraftList').click(function () {
                // Make an AJAX request to load the aircraft list
                $.ajax({
                    url: '/Delivery/_DisplayDeliveryTable',
                    type: 'GET',
                    success: function (data) {
                        $('#displayDeliveryTable').html(data); // Update the aircraft table

                        if (!data || data.trim() === '') {
                            $('#updateAircraft').hide();
                        } else {
                            $('#updateAircraft').show();
                        }

                    },
                    error: function () {
                        console.error('Error loading aircraft list');
                    }
                });
            });
        });

        $('#updateAircraft').hide();

        // Function to validate fields
        function validateFields() {
            var isValid = true;

            // Validate ModelName field
            if ($('#ModelName').val() === '') {
                isValid = false;
                $('#ModelName').addClass('border-danger'); // Apply error styling
            } else {
                $('#ModelName').removeClass('border-danger'); // Remove error styling if field is valid
            }

            // Validate ModelName field
            if ($('#Manufacturer').val() === '') {
                isValid = false;
                $('#Manufacturer').addClass('border-danger'); // Apply error styling
            } else {
                $('#Manufacturer').removeClass('border-danger'); // Remove error styling if field is valid
            }

            // Validate ModelName field
            if ($('#Description').val() === '') {
                isValid = false;
                $('#Description').addClass('border-danger'); // Apply error styling
            } else {
                $('#Description').removeClass('border-danger'); // Remove error styling if field is valid
            }

            //Validate ModelName field
            if ($('#DeliveryCompleteDescription').val() === '') {
                isValid = false;
                $('#DeliveryCompleteDescription').addClass('border-danger'); // Apply error styling
            } else {
                $('#DeliveryCompleteDescription').removeClass('border-danger'); // Remove error styling if field is valid
            }
            // Validate ModelName field
            if ($('#DeliveryCompleteDate').val() === '') {
                isValid = false;
                $('#DeliveryCompleteDate').addClass('border-danger'); // Apply error styling
            } else {
                $('#DeliveryCompleteDate').removeClass('border-danger'); // Remove error styling if field is valid
            }

            // Validate ModelName field
            if ($('#AdditionalDetails').val() === '') {
                isValid = false;
                $('#AdditionalDetails').addClass('border-danger'); // Apply error styling
            } else {
                $('#AdditionalDetails').removeClass('border-danger'); // Remove error styling if field is valid
            }

            // Validate ModelName field
            if ($('#WarrentyYears').val() === '') {
                isValid = false;
                $('#WarrentyYears').addClass('border-danger'); // Apply error styling
            } else {
                $('#WarrentyYears').removeClass('border-danger'); // Remove error styling if field is valid
            }

            // Validate ModelName field
            //if ($('#InteriorProgress').val() === '') {
            //    isValid = false;
            //    $('#InteriorProgress').addClass('border-danger'); // Apply error styling
            //} else {
            //    $('#InteriorProgress').removeClass('border-danger'); // Remove error styling if field is valid
            //}

            //// Validate ModelName field
            //if ($('#OverallProgress').val() === '') {
            //    isValid = false;
            //    $('#OverallProgress').addClass('border-danger'); // Apply error styling
            //} else {
            //    $('#OverallProgress').removeClass('border-danger'); // Remove error styling if field is valid
            //}

            //// Validate ModelName field
            //if ($('#DeliveryDate').val() === '') {
            //    isValid = false;
            //    $('#DeliveryDate').addClass('border-danger'); // Apply error styling
            //} else {
            //    $('#DeliveryDate').removeClass('border-danger'); // Remove error styling if field is valid
            //}


            // Validate other fields in a similar way

            return isValid;
        }

        // Function to validate all fields and return if they are valid
        //function validateFields() {
        //    var isValid = true;

        //    // Array of field IDs to validate
        //    var fieldIds = [
        //        'ModelName', 'Manufacturer', 'BasePrice', 'Description', 'AirframeProgress', 'AvionicsSystemsProgress',
        //        'EnginesProgress', 'InteriorProgress', 'OverallProgress', 'DeliveryDate', 'ManufacturingStatusId'
        //        // Add other field IDs to be validated
        //    ];

        //    // Loop through each field ID to perform validation
        //    fieldIds.forEach(function (fieldId) {
        //        var fieldValue = $('#' + fieldId).val().trim();

        //        if (fieldValue === '') {
        //            $('#' + fieldId).addClass('border border-danger'); // Apply red border for empty fields
        //            isValid = false;
        //        } else {
        //            $('#' + fieldId).removeClass('border border-danger'); // Remove red border for valid fields
        //        }
        //    });

        //    return isValid;
        //}

        //// Function to validate fields and add red border if empty on field blur
        //function validateFieldsRealTime(fieldId) {
        //    $('#' + fieldId).on('blur', function () {
        //        var fieldValue = $(this).val().trim();

        //        if (fieldValue === '') {
        //            $(this).addClass('border border-danger'); // Apply red border for empty fields on blur
        //        } else {
        //            $(this).removeClass('border border-danger'); // Remove red border for valid fields on blur
        //        }
        //    });
        //}

        //// Attach blur event listeners to the fields for real-time validation
        //$(document).ready(function () {
        //    // Array of field IDs to validate on blur
        //    var fieldIds = [
        //        'ModelName', 'Manufacturer', 'BasePrice', 'MaximumSpeed', 'SeatingType', 'EngineType',
        //        'InteriorDesign', 'FuelCapacity', 'SeatingCapacity', 'Weight', 'Description'
        //        // Add other field IDs to be validated on blur
        //    ];

        //    // Loop through each field ID to attach blur event listeners
        //    fieldIds.forEach(function (fieldId) {
        //        validateFieldsRealTime(fieldId); // Attach blur event listener to each field
        //    });

        //    // Event listener for clicking the submitAircraft button
        //    $('#submitAircraft').click(function (event) {
        //        // Prevent the default form submission behavior initially
        //        event.preventDefault();

        //        // Validate fields before submitting the form
        //        if (validateFields()) {
        //            // If fields are valid, allow the form submission
        //            $('#subMitId').submit(); // Submit the form with valid data
        //        } else {
        //            // Fields are not valid, display an error message or perform necessary action
        //            alert('Please fill all required fields with valid data.');
        //        }
        //    });

        //    // ... (Other parts of your existing JavaScript code)
        //});


        //// Function to handle update action
        //function updateAircraft(aircraftId) {
        //    // AJAX request to call the Aircraft.cshtml file with the Id parameter
        //    $.ajax({
        //        url: '/Aircraft/Details', // Replace with the appropriate URL for your Aircraft.cshtml file
        //        type: 'GET',
        //        data: { id: aircraftId }, // Pass the Id as a parameter
        //        success: function (response) {
        //            // Handle the response as needed (e.g., display the Aircraft.cshtml content)
        //            // For example, you can load the response content into a div
        //            $('#displayAircraftDetails').html(response);
        //        },
        //        error: function () {
        //            console.error('Error loading aircraft details');
        //        }
        //    });
        //}
        var ManufacturingStatusId = null;
        var DeliveryId = null;

        //// Click event for the Update button
        $(document).on('click', '.editBtn', function () {
            //ManufacturingStatusId = $(this).data('ManufacturingStatusId');

            //updateAircraft(aircraftId); // Call the function passing the aircraftId

        });

        $(document).ready(function () {
            // Event listener for clicking the updateAircraft button
            $('#updateAircraft').click(function () {


                // Validate fields before updating
                if (validateFields()) {


                    var ManufacturingComplete = false;

                    if (100 == $('#OverallProgress').val()) {
                        ManufacturingComplete = true;
                    } else {
                        ManufacturingComplete = false;
                    }


                    if (100 == $('#OverallProgress').val()) {

                        // If fields are valid, construct the data object
                        var aircraftData = {
                            ModelName: $('#ModelName').val(),
                            Manufacturer: $('#Manufacturer').val(),
                            Description: $('#Description').val(),
                            BasePrice: $('#BasePrice').val(),
                            AirframeProgress: $('#AirframeProgress').val(),
                            AvionicsSystemsProgress: $('#AvionicsSystemsProgress').val(),
                            EnginesProgress: $('#EnginesProgress').val(),
                            InteriorProgress: $('#InteriorProgress').val(),
                            OverallProgress: $('#OverallProgress').val(),
                            DeliveryDate: $('#DeliveryDate').val(),
                            ManufacturingComplete: ManufacturingComplete,
                            Telephone: $('#Telephone').val(),
                            EmailAddress: $('#EmailAddress').val(),
                            ManufacturingStatusId: $('#ManufacturingStatusId').val(),
                            CardHolderName: $('#CardHolderName').val(),
                            ShippingDate: $('#ShippingDate').val(),
                            AdditionalDetails: $('#AdditionalDetails').val(),
                            AirportCity: $('#AirportCity').val(),
                            DeliveryCompleteDate: $('#DeliveryCompleteDate').val(),
                            DeliveryCompleteDescription: $('#DeliveryCompleteDescription').val(),
                            WarrentyYears: $('#WarrentyYears').val(),
                            DeliveryComplete: "Yes",
                            DeliveryId: $('#DeliveryId').val(),

                            // Get other field values in a similar way
                        };

                        DeliveryId = $('#DeliveryId').val();

                        //var aircraftId = $('#Id').val();
                        console.log(DeliveryId)
                        console.log(aircraftData)

                        // Perform update action with the constructed aircraftData object
                        // You can make an AJAX request or call a function to update the data here
                        updateAircraftData(aircraftData, DeliveryId);

                    } else {
                        toastr.error('Manufacturing process still not completed.', 'Error', {
                            closeButton: true,
                            progressBar: true,
                            timeOut: 3000 // Adjust the duration the toast will be displayed (in milliseconds) as needed
                        });

                    }


                } else {
                    // Fields are not valid, display an error message or perform necessary action
                    alert('Please fill all required fields with valid data.');
                }
            });



            // Function to update the aircraft data
            function updateAircraftData(data, aircraftId) {
                // Perform the update action here using the 'data' object
                // For example, make an AJAX request to update the data on the server
                var Url = '/Delivery/Edit/' + aircraftId;

                var formData = new FormData();

                // Append non-file fields to FormData
                for (var key in data) {
                    formData.append(key, data[key]);
                }

                //// Append file (IFormFile) to FormData
                //var fileInput = document.getElementById('uploadedImage'); // Replace 'uploadedImage' with your file input's ID
                //var file = fileInput.files[0]; // Get the first file from the input

                //formData.append('uploadedImage', file);

                $.ajax({
                    url: Url, // Replace with your endpoint for updating aircraft
                    type: 'POST',
                    headers: {
                        RequestVerificationToken: $('input:hidden[name="__RequestVerificationToken"]').val()
                        // Adjust the selector based on your specific anti-forgery token input
                    },
                    data: formData,
                    processData: false, // Don't process the FormData
                    contentType: false, // Set content type to false for file uploads
                    success: function (response) {
                        // Handle success response after updating data
                        console.log('Aircraft data updated successfully.');
                        $('#submitAircraft').show();
                        $('#updateAircraft').hide();

                        toastr.success('Delivery data updated successfully.', 'Success', {
                            closeButton: true,
                            progressBar: true,
                            timeOut: 5000 // Time duration the toast will be displayed (in milliseconds)
                        });

                        // Delay the reload slightly to allow users to see the toast
                        setTimeout(function () {
                            location.reload(); // Reload the page after 2 seconds
                        }, 3000); // Adjust the delay time as needed



                    },
                    error: function (xhr, status, error) {
                        console.error('Error updating aircraft data:', error);
                        // Handle error response
                    }
                });
            }

            // ... Other code and event listeners
        });











    </script>


    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDQ6gY2DAOJZyHRDIm0M2KDiBlNmzmGmY0&libraries=places"></script>
    <script>
        function initializeAutocomplete() {
            var input = document.getElementById('AirportCity');
            var options = {
                types: ['(cities)'] // Restrict results to cities
            };
            var autocomplete = new google.maps.places.Autocomplete(input, options);

            // Trigger search on place changed
            autocomplete.addListener('place_changed', function () {
                var place = autocomplete.getPlace();
                if (!place.geometry) {
                    return;
                }

                var mapUrl = 'https://www.google.com/maps/search/?api=1&query=' + encodeURIComponent(place.name);
                window.open(mapUrl, '_blank');
            });
        }

        google.maps.event.addDomListener(window, 'load', initializeAutocomplete);
    </script>


    <!-- Bootstrap Scripts (from CDN) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" integrity="..." crossorigin="anonymous"></script>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }

</body>
</html>
